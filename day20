//Q39: Write a program to find the product of odd digits of a number.

/*
Sample Test Cases:
Input 1:
12345
Output 1:
15 (1*3*5)

Input 2:
2468
Output 2:
1 (no odd digits, assume 1)

*/


//Solution 
#include <stdio.h>

int main() {
    int num, digit, product = 1;
    int hasOdd = 0;

    printf("Enter a number: ");
    scanf("%d", &num);

    if (num < 0)
        num = -num;

    while (num > 0) {
        digit = num % 10;
        if (digit % 2 != 0) {
            product *= digit;
            hasOdd = 1;
        }
        num /= 10;
    }

    if (!hasOdd)
        product = 1;

    printf("Product of odd digits: %d\n", product);

    return 0;
}

//Q40: Write a program to find the 1â€™s complement of a binary number and print it.

/*
Sample Test Cases:
Input 1:
1010
Output 1:
0101

Input 2:
1111
Output 2:
0000

*/

//Solution:
#include <stdio.h>
#include <string.h>

int main() {
    char binary[100];  // to store the binary number

    printf("Enter a binary number: ");
    scanf("%s", binary);

    // loop through each character of the string
    for (int i = 0; i < strlen(binary); i++) {
        // if digit is 1, change it to 0
        if (binary[i] == '1')
            binary[i] = '0';
        // if digit is 0, change it to 1
        else if (binary[i] == '0')
            binary[i] = '1';
    }

    printf("1's Complement: %s\n", binary);

    return 0;
}
